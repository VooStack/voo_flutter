// Mocks generated by Mockito 5.4.6 from annotations
// in voo_logging/test/dio_interceptor_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:voo_logging/features/logging/domain/interceptors/network_interceptor.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NetworkInterceptor].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInterceptor extends _i1.Mock
    implements _i2.NetworkInterceptor {
  MockNetworkInterceptor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> onRequest({
    required String? method,
    required String? url,
    Map<String, String>? headers,
    dynamic body,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#onRequest, [], {
              #method: method,
              #url: url,
              #headers: headers,
              #body: body,
              #metadata: metadata,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> onResponse({
    required int? statusCode,
    required String? url,
    required Duration? duration,
    Map<String, String>? headers,
    dynamic body,
    int? contentLength,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#onResponse, [], {
              #statusCode: statusCode,
              #url: url,
              #duration: duration,
              #headers: headers,
              #body: body,
              #contentLength: contentLength,
              #metadata: metadata,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> onError({
    required String? url,
    required Object? error,
    StackTrace? stackTrace,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#onError, [], {
              #url: url,
              #error: error,
              #stackTrace: stackTrace,
              #metadata: metadata,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
